* Git Commits Message Conventions

The git commit message is a single short (less than 50 character) line
summarizing the change, followed by a blank line. The subject should
start with a capital letter and should not end with dot. 

The message *has to be* in imperative form.

Use the following convention to start the subject of commit:
- Add :: Create a capability e.g. feature, test, dependency.
- Remove :: Remove a capability e.g. feature, test, dependency.
- Fix :: Fix an issue e.g. bug, typo, accident, misstatement.
- Bump :: Increase the version of something e.g. dependency.
- Change :: Change the build process, or tooling, or infra.
- Start :: Begin doing something; e.g. create a feature flag.
- End :: End doing something; e.g. remove a feature flag.
- Refactor :: A code change that MUST be just a refactoring.
- Reformat :: Refactor of formatting, e.g. omit whitespace.
- Optimize :: Refactor of performance, e.g. speed up code.
- Document :: Refactor of documentation, e.g. help files.

A properly formed Git commit subject line should always be able to
complete the following sentence: "if applied, this commit will <your
subject line here>". For example :

- If applied, this commit will "Remove unnecessary files"
- If applied, this commit will "Add grep option"
- If applied, this commit will "Fix error when protocol is missing"

If the your commit message can not be written like that because to
much is contained in the commit then *you have committed to
seldom. Fix your commits instead of your message.

** Body

Here you write what and why is changed. The body should not exceed 72
characters for a line. Not every commit has to have body.

** Last line

In the last line, add which issue the commit fixes or is related
to. This can be a link, number or if you use GitHub you can write it
as Resolves #N, where N is the issue ID.

Use the following convention to end the body of a commit:
- Resolves #N :: Resolves issue N

** Example

#+BEGIN_EXAMPLE
Fix error when protocol is missing

First, it checks if the protocol is set. If not, it changes the url and
add the basic http protocol on the beginning.
Second, it does a "preflight" request and follows all redirects and
returns the last URL. The process then continues with this URL.

Resolves #17
#+END_EXAMPLE

** Adapted from

- [[https://juffalow.com/other/write-good-git-commit-message][Write good git commit message]]
- [[https://news.ycombinator.com/item?id=18663032][Write good git commit message {hn}]]
